[package]
authors.workspace    = true
categories.workspace = true
edition.workspace    = true
license.workspace    = true
name                 = "binding"
repository.workspace = true
version              = "0.1.0"

[lib]
crate-type = ["cdylib"]
test       = false

[features]
plugin = ["rspack_binding_builder/plugin"]

[dependencies]
spack_macros                      = { workspace = true }
spack_plugin_bundle_analyzer      = { workspace = true }
spack_plugin_case_sensitive_paths = { workspace = true }
spack_plugin_demo                 = { workspace = true }
spack_plugin_duplicate_dependency = { workspace = true }

# Enable SWC plugin feature for targets that support it
# [target.'cfg(not(any(target_arch = "wasm32", all(target_os = "windows", target_arch = "x86"), all(target_os = "windows", target_arch = "aarch64"))))'.dependencies]
# [target.'cfg(not(any(target_arch = "wasm32")))'.dependencies]
# rspack_binding_builder = { workspace = true, features = ["plugin"] }


rspack_binding_builder     = { workspace = true }
rspack_core                = { workspace = true }
rspack_error               = { workspace = true }
rspack_javascript_compiler = { workspace = true }
rspack_napi                = { workspace = true }

napi                = { workspace = true }
napi-build          = { workspace = true }
napi-derive         = { workspace = true }
napi-derive-backend = { workspace = true }

derive_more = { workspace = true }
swc_core    = { workspace = true }

serde = { workspace = true }
# strum        = { workspace = true }
# strum_macros = { workspace = true }

rustc-hash = { workspace = true }

[build-dependencies]
rspack_binding_build = { workspace = true }
